#!/bin/bash

DEVICE="rasp"
PREFIX="rasp"

FILES=" gpio 0"

INSMOD=/sbin/insmod;

CFG=/etc/${DEVICE}.conf

KERNEL=`uname -r`

if [ "$(id -u)" != "0" ]
then
	echo "You must be root to load or unload modules"
	exit 1
fi

if [ -r $CFG ]; then
    OWNER=`awk "\\$1==\"owner\" {print \\$2}" $CFG`
    GROUP=`awk "\\$1==\"group\" {print \\$2}" $CFG`
    MODE=`awk "\\$1==\"mode\" {print \\$2}" $CFG`
    OPTIONS=`sed -n '/^options / s/options //p' $CFG`
fi

function create_files() {
	cd /dev
	local devlist=""
	local file
	while true; do
		if [ $# -lt 2 ]; then break; fi
		file="${DEVICE}$1"
		mknod $file c $MAJOR $2
		devlist="$devlist $file"
		shift 2
	done
	if [ -n "$OWNER" ]; then chown $OWNER $devlist; fi
	if [ -n "$GROUP" ]; then chgrp $GROUP $devlist; fi
	if [ -n "$MODE"  ]; then chmod $MODE  $devlist; fi
}

function remove_files() {
	cd /dev
	local devlist=""
	local file
	while true; do
		if [ $# -lt 2 ]; then break; fi
		file="${DEVICE}$1"
		devlist="$devlist $file"
		shift 2
	done
	rm -f $devlist
}

function load_device() {
	if [ -f ./${DEVICE}.ko ]; then
		devpath=./$DEVICE.ko
	else
		devpath=$DEVICE;
	fi;
	if [ "$devpath" != "$DEVICE" ]; then
		echo -n " (loading file $devpath)"
	fi

    if $INSMOD $devpath $OPTIONS; then
		MAJOR=`awk "\\$2==\"$DEVICE\" {print \\$1}" /proc/devices`
		remove_files $FILES
		create_files $FILES
    else
		echo " FAILED!"
    fi
}

function unload_device () {
    /sbin/rmmod $DEVICE
    remove_files $FILES
}	

case "$1" in
  start)
     echo -n "Loading $DEVICE"
     load_device
     echo "."
     ;;
  stop)
     echo -n "Unloading $DEVICE"
     unload_device
     echo "."
     ;;
  force-reload|restart)
     echo -n "Reloading $DEVICE"
     unload_device
     load_device
     echo "."
     ;;
  *)
     echo "Usage: $0 {start|stop|restart|force-reload}"
     exit 1
esac

exit 0
